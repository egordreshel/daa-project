version: '2'

services:
  # App Source/
  source:
    image: tianon/true
    user: ${UID}:${GID}
    container_name: ${COMPOSE_PROJECT_NAME}-source
    volumes:
      - ./:${APP_PATH}:rw

  # Database
  db:
    image: postgres:latest
    container_name: ${COMPOSE_PROJECT_NAME}-db
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    expose:
      - ${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./sql/:/docker-entrypoint-initdb.d/
      - db:/var/lib/postgresql/data

  # Composer
  composer:
    build:
      context: ./.docker/composer
    container_name: ${COMPOSE_PROJECT_NAME}-composer
    user: ${UID}:${GID}
    working_dir: ${APP_PATH}
    environment:
      COMPOSER_ALLOW_SUPERUSER: 0
    volumes_from:
      - source

  # Yii
  yii:
    user: ${UID}:${GID}
    build:
      context: ./.docker/yii
    environment:
      - UID=${UID}
      - GID=${GID}
    container_name: ${COMPOSE_PROJECT_NAME}-yii
    working_dir: ${APP_PATH}
    depends_on:
      - db
      - php
    links:
      - db:postgres
      - php:php
    volumes_from:
      - source

  # PHP-FPM
  php:
    build:
      context: ./.docker/php-fpm
      args:
        - INSTALL_OPCACHE=false
        - INSTALL_XDEBUG=true
    container_name: ${COMPOSE_PROJECT_NAME}-php
    environment:
      - UID=${UID}
      - GID=${GID}
    user: ${UID}:${GID}
    restart: always
    expose:
      - ${PHP_PORT}
    working_dir: ${APP_PATH}
    depends_on:
      - db
    links:
      - db:postgres
    volumes_from:
      - source

  # Cron
  cron:
    build:
      context: ./.docker/cron
      args:
        - UID=${UID}
    container_name: ${COMPOSE_PROJECT_NAME}-cron
    working_dir: ${APP_PATH}
    depends_on:
      - db
      - php
    links:
      - db:postgres
      - php:php
    environment:
      - CUSTOM_ENV=value
    volumes_from:
      - source

  # Nginx
  nginx:
    build:
      context: ./.docker/nginx
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    working_dir: /etc/nginx
    restart: always
    environment:
      - VIRTUAL_HOST=${NGINX_HOST},www.${NGINX_HOST},backend.${NGINX_HOST},www.backend.${NGINX_HOST}
      - VIRTUAL_PORT=${NGINX_PORT}
      - VIRTUAL_NETWORK=proxy
      - HTTPS_METHOD=nohttps
      - NGINX_ROOT=${NGINX_ROOT}
      - NGINX_HOST=${NGINX_HOST}
      - NGINX_PORT=${NGINX_PORT}
      - NGINX_PROTOCOL=${NGINX_PROTOCOL}
      - PHP_HOST=${PHP_HOST}
      - PHP_PORT=${PHP_PORT}
    volumes_from:
      - source
    volumes:
      - ./.docker/volumes/nginx:/var/log/nginx
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./.docker/nginx/site.conf.tmpl:/etc/nginx/site.conf.tmpl
      - /etc/nginx/sites-available
    depends_on:
      - db
      - php
    links:
      - db:${DB_HOST}
      - php:${PHP_HOST}
    expose:
      - ${APP_PORT_HTTP}
      - ${APP_PORT_HTTPS}
    command: /bin/bash -c "envsubst '$$NGINX_ROOT $$NGINX_HOST $$NGINX_PORT $$NGINX_PROTOCOL $$PHP_HOST $$PHP_PORT' < /etc/nginx/site.conf.tmpl > /etc/nginx/sites-available/site.conf && nginx -g 'daemon off;'"
    networks:
      - proxy
      - default

volumes:
  db:

networks:
  proxy:
    external:
      name: proxy
